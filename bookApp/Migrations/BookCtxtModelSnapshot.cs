// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bookApp.Models;

namespace bookApp.Migrations
{
    [DbContext(typeof(BookCtxt))]
    partial class BookCtxtModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("bookApp.Models.Book", b =>
                {
                    b.Property<int>("bookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ushort>("categoryID")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("classificationID")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("pageCount")
                        .HasColumnType("INTEGER");

                    b.Property<float>("price")
                        .HasColumnType("REAL");

                    b.Property<string>("publisher")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("bookID");

                    b.HasIndex("categoryID");

                    b.HasIndex("classificationID");

                    b.ToTable("books");
                });

            modelBuilder.Entity("bookApp.Models.Category", b =>
                {
                    b.Property<ushort>("categoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("categoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("categoryID");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            categoryID = (ushort)1,
                            categoryName = "action"
                        },
                        new
                        {
                            categoryID = (ushort)2,
                            categoryName = "biography"
                        },
                        new
                        {
                            categoryID = (ushort)3,
                            categoryName = "business"
                        },
                        new
                        {
                            categoryID = (ushort)4,
                            categoryName = "christian"
                        },
                        new
                        {
                            categoryID = (ushort)5,
                            categoryName = "classic"
                        },
                        new
                        {
                            categoryID = (ushort)6,
                            categoryName = "health"
                        },
                        new
                        {
                            categoryID = (ushort)7,
                            categoryName = "historical"
                        },
                        new
                        {
                            categoryID = (ushort)8,
                            categoryName = "self-help"
                        },
                        new
                        {
                            categoryID = (ushort)9,
                            categoryName = "thriller"
                        });
                });

            modelBuilder.Entity("bookApp.Models.Classification", b =>
                {
                    b.Property<ushort>("classificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("classificationName")
                        .HasColumnType("TEXT");

                    b.HasKey("classificationID");

                    b.ToTable("classifications");

                    b.HasData(
                        new
                        {
                            classificationID = (ushort)1,
                            classificationName = "fiction"
                        },
                        new
                        {
                            classificationID = (ushort)2,
                            classificationName = "non-fiction"
                        });
                });

            modelBuilder.Entity("bookApp.Models.Book", b =>
                {
                    b.HasOne("bookApp.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bookApp.Models.Classification", "classification")
                        .WithMany()
                        .HasForeignKey("classificationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
